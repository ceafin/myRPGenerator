#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.5 (standalone edition) on Thu Apr 19 16:23:32 2012

import wx
import os
import glob
import imp

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.frame_1_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu2 = wx.Menu()
        menuExit = wxglade_tmp_menu.Append(wx.ID_EXIT, "&Quit", "", wx.ITEM_NORMAL)
        menuGen = wxglade_tmp_menu2.Append(wx.NewId(), "&Roll\tCtrl+R", "", wx.ITEM_NORMAL)
        self.frame_1_menubar.Append(wxglade_tmp_menu, "&File")
        self.frame_1_menubar.Append(wxglade_tmp_menu2, "&Generate")
        self.SetMenuBar(self.frame_1_menubar)
        # Menu Bar end
        
        self.cboRolls = wx.ComboBox(self, -1, choices=["5", "10", "15", "20", "25"], style=wx.CB_DROPDOWN)
        self.btnRoll = wx.Button(self, -1, "Roll")
        self.lstGens = wx.ListBox(self, -1, choices=self.GetGeneratorList())
        self.txtResults = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE)
        
        # Events
        self.Bind(wx.EVT_BUTTON, self.OnRoll, self.btnRoll)
        self.Bind(wx.EVT_MENU, self.OnExit, menuExit)
        self.Bind(wx.EVT_LISTBOX, self.OnSelectGen, self.lstGens)
        self.Bind(wx.EVT_MENU, self.OnRoll, menuGen)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        self.cboRolls.SetSelection(2)

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("RPG Generator")
        self.SetSize((853, 581))
        self.cboRolls.SetSelection(0)
        self.lstGens.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(self.cboRolls, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(self.btnRoll, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_3.Add(sizer_4, 0, wx.ALL | wx.EXPAND, 4)
        sizer_3.Add(self.lstGens, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_2.Add(self.txtResults, 3, wx.EXPAND, 0)
        self.SetSizer(sizer_2)
        self.Layout()
        # end wxGlade

    def GetGeneratorList(self):
        # Get list of generators
        genList = []
        path = './Generators/'
        for infile in glob.glob(os.path.join(path, '*.py')):
            infile = os.path.splitext(os.path.basename(infile))[0]
            if (not infile.startswith("_")):
                genList.append(infile)
        return genList
    
    def OnSelectGen(self, e):
        self.OnRoll(e)
    
    def OnExit(self, e):
        self.Close(True)
    
    def OnRoll(self, e):
        genFile = './Generators/' + self.lstGens.GetStrings()[self.lstGens.GetSelection()] + ".py"
        numRolls = int(self.cboRolls.GetStrings()[self.cboRolls.GetSelection()])
        
        x = imp.load_source('generator',genFile)
        z = x.generator()
        
        results = []
        for j in range(numRolls):
            results.append(z.start())
        results.sort()
        self.txtResults.SetValue('\n'.join(results))
        

# end of class MyFrame
if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
